// Do not edit this file function (use only)
// add this file in source/External file

#pragma once

#include<stdio.h>

#ifndef DEFINED_USING_ENUM
	#define DEFINED_USING_ENUM
	typedef enum Enum_gender{
		MALE        = 'M', 
		FEMALE      = 'F', 
		NULL_GENDER = '\0'
	}Gender;
	// error massage use
	enum InvalidType {
		NULL_message, 
		InvalidDataType, 
		PlsReenter,
		FileNotFound, 
		InvalidRange,
		WrongElement,
		FileOpenFailed, 
		InvalidData
	};
#endif // !DEFINED_USING_ENUM


// Boolean Function //
// in C bool is cant work __crt_bool as best fit 
// start with 'is', return __crt_bool only (TRUE or FALSE)

// eg. isRange(1, 12, month);
__crt_bool isRange(
	const int range1,
	const int range2,
	const int check
);
// eg. isalspace_str("YHJn ieigwwg") TRUE
// eg. isalspace_str("67 8&&*.  *~") FALSE
__crt_bool isalspace_str(
	const char * string
);
// eg. isalspace_str("YH7689eigwg")  TRUE
// eg. isalspace_str("YH7ni  gwwg")  FALSE
__crt_bool isalnum_str(
	const char * string
);
// eg. isalspace_str("YHJnieigwwg")  TRUE
// eg. isalspace_str("78990  $%^(")  FALSE
__crt_bool isalpha_str(
	const char * string
);
// eg. isGender('F')                 TRUE
// eg. isGender('P')                 FALSE
__crt_bool isGender(
	const Gender gender
);
// eg. isPhoneNumber("018-7980887")  TRUE
// eg. isPhoneNumber("hhfjfgm")      FALSE
__crt_bool isPhoneNumber(
	const char * data
);

//NULL Auto Exit Same as fopen("yes.txt", "a")
//Updated Version Write Mode Will Info User Do You Sure Want To Overwrite
//Updated Version 2 a mode Will Check Form User Do You Sure Add Record
FILE* fopen_Check_exit(
	const char * filename,
	const char * mode
);



// combine printf, scanf and rewind stdin get int (support argument list)
// no logictic error (int) will return
int get_In_intf_rtn(
	const char * const format,
	...
);
// combine printf, scanf and rewind stdin get char (support argument list)
// no logictic error (char) will return
// fill in mode (support toupper and to lower else no change)
// toupper = "toupper", tolower = "tolower", else no change
char get_In_charf_rtn(
	const char *       mode,
	const char * const format,
	...
);
// combine printf, scanf and rewind stdin get string (support argument list)
void get_In_stringf(
	char       *       destination,
	const char * const format,
	...
);
// put selection list and get valid value from user
// eg. 
// =========================START
// | A. --> Display 
// | B. --> ADD
// | n. --> ....
// =========================END
//      Please Enter ...-> 
char get_selection_char(
	const char         maxChoise,
	const char * const selectionList,
	...
);
// put selection list and get valid value from user
// eg. 
// =========================START
// | 01. --> Display 
// | 02. --> ADD
// | n. --> ....
// =========================END
//      Please Enter ...-> 
int get_selection_int(
	const int         maxChoise,
	const char* const selectionList,
	...
);
// Get A valid Gender
Gender get_Gender();



// Base On The Mode Display Invalid Message in Box From
void out_Error(
	const enum InvalidType mode
);
// Base On The Mode Display Invalid Message
// And Display Invalid Input Data in Box From
void out_Error_Reenter(
	const enum InvalidType mode
);
// standard box small out message max "<45word>"
void out_MessageBox(
	const char * const buffer48
);
// List Of Short Messeage 
void out_MessageList(
	const int          numBuffer,
	const char * const bufferList,
	...
);
// List Of Long Messeage
void out_MessageList_Long(
	const int          numBuffer,
	const char * const bufferList,
	...
);
void system_loading(
);